/// Contains all code for displaying things to the screen
module qonquest2.display;

macro import std.macro.cimport;
import c_header("GL/gl.h");

import std.algorithm;
import std.file;
import std.string;

import qonquest2.base;
import qonquest2.localization;
import qonquest2.sdl;
import qonquest2.window;

/// A point with two floats
alias Point2f = Vector(float, 2);

/// Renders a province
void render(Province p, float multiplier = 1) {
    Color3f(p.color).mul(multiplier).draw;
    glBegin(GL_QUADS);
    for (pix in p.pixels) {
        glVertex2f(pix.x,   pix.y  );
        glVertex2f(pix.x+1, pix.y  );
        glVertex2f(pix.x+1, pix.y+1);
        glVertex2f(pix.x,   pix.y+1);
    }
    glEnd();
}

/// Renders a province's country
void renderCountry(Province p, float multiplier = 1) {
    Color3f(p.owner.color).mul(multiplier).draw;
    glBegin(GL_QUADS);
    for (pix in p.pixels) {
        glVertex2f(pix.x,   pix.y  );
        glVertex2f(pix.x+1, pix.y  );
        glVertex2f(pix.x+1, pix.y+1);
        glVertex2f(pix.x,   pix.y+1);
    }
    glEnd();
}

/// Renders the text for a country
void renderText(Country c, GameMap map, Font font, Localization localization) {
    mut Point2f avg;
    mut int count = 0;
    for (p in map.provinces) {
        if(p.owner !is c)
            continue;
        count++;
        avg += p.center.(Point2f(x, y));
    }
    avg /= count;
    textCenter(font, localization.get(c.name), avg.x, avg.y, 1+((count-1)/3), Color3f(1, 1, 1), true);
}

/// Renders a province's text (must be called after all provinces are rendered to avoid the text being clobbered)
void renderText(Province p, Player player, Font font, Localization localization) {
    textCenter(font, localization.get(p.name), p.center.x, p.center.y, 1, Color3f(1, 1, 1), true);
    mut string troopsText = "$(p.troops)";
    int effective = p.effectiveTroops(player);
    if(effective != p.troops) {
        int dif = effective-p.troops;
        troopsText ~= " ("~("+" if dif > 0 else "")~"$dif)";
    }
    textCenter(font, troopsText, p.center.x, p.center.y+CHAR_SIZE, 1, Color3f(1, 1, 1), true);
}

/// Redraws the opengl scene
void redrawOpenGlScene(Game game, Font font, Localization localization) {
    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
    glLoadIdentity();
    glOrtho(0, WIDTH, HEIGHT, 0, -1, 1);
    glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
    glEnable(GL_BLEND);
    glBegin(GL_QUADS);
    // draw game background
    mut float bgMultiplier = 1;
    if(game.state == State.GAME && MapMode.(game.(mapMode == SELECT_COUNTRY || mapMode == MOVE_TROOPS_1
        || mapMode == MOVE_TROOPS_2 || mapMode == DEPLOY_TROOPS || mapMode == WON || mapMode == LOST)))
        bgMultiplier = 0.5f;
    glColor3f(0, 0, 1*bgMultiplier);
    glVertex2f(0, 0);
    glVertex2f(WIDTH, 0);
    glColor3f(0, 0.75f*bgMultiplier, 1*bgMultiplier);
    glVertex2f(WIDTH, HEIGHT);
    glVertex2f(0, HEIGHT);
    glEnd();
    void renderCountries(float m = 1) {
        for (p in game.map.provinces) {
            p.renderCountry(m);
        }
        for (c in game.map.countries.values)
            c.renderText(game.map, font, localization);
    }
    void renderProvinces(float m = 1, mut Province[] provs = null) {
        if (provs.empty) provs = game.map.provinces;
        for (p in provs)
            p.render(m);
        for (p in provs)
            p.renderText(game.player, font, localization);
    }
    void renderWindows() {
        for (mut size_t i = game.windows.length - 1; i >= 0; i--) {
            auto w = game.windows[i];
            w.render(game.playerOrNull);
            if(w.close)
                game.windows = game.windows[0..i]~game.windows[i+1..$];
        }
    }
    void renderStraits() {
        glBegin(GL_LINES);
        glColor3f(1, 0, 1);
        for (strait in game.map.straits) {
            auto a = strait[0];
            auto b = strait[1];
            glVertex2f(a.x, a.y);
            glVertex2f(b.x, b.y);
        }
        glEnd();
    }
    if(game.state == State.GAME) {
        if (game.mapMode == MapMode.SELECT_COUNTRY) {
            renderCountries();
            textCenter(font, localization.get("select-country"), WIDTH/2, 0, 3, Color3f(1, 1, 1));
        } else if (game.mapMode == MapMode.COUNTRY) {
            if(!game.hideStraits)
                renderStraits();
            renderCountries();
            renderWindows();
        } else if (game.mapMode == MapMode.PROVINCE) {
            if(!game.hideStraits)
                renderStraits();
            renderProvinces();
            renderWindows();
        } else if (game.mapMode == MapMode.MOVE_TROOPS_1) {
            renderStraits();
            renderProvinces(0.5f);
            renderProvinces(1, game.availableProvinces);
            textCenter(font, localization.get("select-source-province"), WIDTH/2, 0, 3, Color3f(1, 1, 1));
            textCenter(font, localization.get("or-press-escape"), WIDTH/2, CHAR_SIZE*3, 1, Color3f(1, 1, 1));
        } else if (game.mapMode == MapMode.MOVE_TROOPS_2) {
            renderStraits();
            renderProvinces(0.5f);
            renderProvinces(1, game.availableProvinces);
            textCenter(font, localization.get("select-destination-province"), WIDTH/2, 0, 3, Color3f(1, 1, 1));
            textCenter(font, localization.get("or-press-escape"), WIDTH/2, CHAR_SIZE*3, 1, Color3f(1, 1, 1));
        } else if (game.mapMode == MapMode.DEPLOY_TROOPS) {
            renderStraits();
            renderProvinces(0.5f);
            renderProvinces(1, game.availableProvinces);
            textCenter(font, localization.get("select-province-to-deploy"), WIDTH/2, 0, 3, Color3f(1, 1, 1));
            textCenter(font, localization.get("or-press-escape"), WIDTH/2, CHAR_SIZE*3, 1, Color3f(1, 1, 1));
        } else if (game.mapMode == MapMode.WON) {
            renderCountries();
            textCenter(font, localization.get("won"), WIDTH/2, 0, 3, Color3f(1, 1, 1));
            textCenter(font, localization.get("in-turns").replace("%s", "$(game.currentTurn)"), WIDTH/2, CHAR_SIZE*3, 1, Color3f(1, 1, 1));
        } else if (game.mapMode == MapMode.LOST) {
            renderCountries();
            textCenter(font, localization.get("lost"), WIDTH/2, 0, 3, Color3f(1, 1, 1));
            textCenter(font, localization.get("in-turns").replace("%s", "$(game.currentTurn)"), WIDTH/2, CHAR_SIZE*3, 1, Color3f(1, 1, 1));
        }
        return;
    }
    if(game.state == State.MAIN_MENU) {
        textCenter(font, localization.get("qonquest-2"), WIDTH/2, 0, 4, Color3f(1, 1, 1));
        textCenter(font, localization.get("foss-notice"), WIDTH/2, CHAR_SIZE*4, 1, Color3f(1, 1, 1));
    }
    renderWindows();
}
